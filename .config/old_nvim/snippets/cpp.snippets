# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet pcomp
	#include <iostream>
	#include <vector>
	#include <algorithm>
	#include <string>
	#include <cmath>

	using namespace std;

	void solve();

	int main() 
	{
		ios_base::sync_with_stdio(false);	cin.tie(NULL);

	#ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
		freopen("output.txt", "w", stdout);
		freopen("error.txt", "w", stderr);
	#endif

		int t;
	${1}  cin >> t;
		while (t--) 
		{
			solve();
			cout << "\\n";
		}

		cerr << "Time taken: " << 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC << "ms" << endl;
		return 0;
	}

	void solve()
	{
		${0}
	}
	endsnippet
